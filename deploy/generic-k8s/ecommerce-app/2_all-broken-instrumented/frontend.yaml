apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    tags.datadoghq.com/service: store-frontend
    app: ecommerce
    tags.datadoghq.com/env: "development"
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: store-frontend
      tags.datadoghq.com/env: "development"
      app: ecommerce
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        tags.datadoghq.com/service: store-frontend
        tags.datadoghq.com/env: "development"
        app: ecommerce
      annotations:
        ad.datadoghq.com/frontend.logs: '[{"source": "ruby", "service": "store-frontend"}]'
        ad.datadoghq.com/frontend.tags: '{"team": "frontend"}'
    spec:
      containers:
      - args:
        - docker-entrypoint.sh
        command:
        - sh
        env:
          - name: DB_USERNAME
            value: "postgres"
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: pw
                name: db-password
          - name: DD_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DD_LOGS_INJECTION
            value: "true"
          - name: DD_ENV
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/env']
          - name: DD_SERVICE
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/service']
          - name: DD_VERSION
            value: "1.0"
          - name: DD_ANALYTICS_ENABLED
            value: "true"
          - name: DISCOUNTS_ROUTE
            value: "http://discounts"
          - name: DISCOUNTS_PORT
            value: "5001"
          - name: ADS_ROUTE
            value: "http://advertisements"
          - name: ADS_PORT
            value: "5002"
          # Enable RUM
          # - name: DD_CLIENT_TOKEN
          #   value: <your_client_token>
          # - name: DD_APPLICATION_ID
          #   value: <your_application_id>
        image: "shocnt/store-frontend-broken-instrumented:latest"
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 3000
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    tags.datadoghq.com/service: store-frontend
    tags.datadoghq.com/env: development
    app: ecommerce
  name: frontend
spec:
  ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
      name: http
  selector:
    tags.datadoghq.com/service: store-frontend
    tags.datadoghq.com/env: development
    app: ecommerce
  type: ClusterIP
