kind: ServiceAccount
apiVersion: v1
metadata:
  name: postgres
---
apiVersion: v1
kind: Secret
metadata:
  name: db-password
  labels:
    app: ecommerce
    service: db
type: Opaque
data:
  pw: cG9zdGdyZXM=
---
  apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: task-pv-volume 
    labels:
      type: local
  spec:
    storageClassName: manual 
    capacity:
      storage: 5Gi
    accessModes:
      - ReadWriteOnce 
    persistentVolumeReclaimPolicy: Retain
    hostPath:
      path: "/mnt/data" 
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: task-pvc-volume
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: manual
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    tags.datadoghq.com/service: db
    tags.datadoghq.com/env: "development"
    app: ecommerce
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: db
      tags.datadoghq.com/env: "development"
      app: ecommerce
  strategy: {}
  template:
    metadata:
      labels:
        tags.datadoghq.com/service: db
        tags.datadoghq.com/env: "development"
        app: ecommerce
      annotations:
        ad.datadoghq.com/postgres.logs: '[{"source": "postgresql", "service": "db"}]'
        ad.datadoghq.com/postgres.tags: '{"team": "db"}'
    spec:
      containers:
      - image: postgres:11-alpine
        name: postgres
        securityContext:
          privileged: true 
        ports:
          - containerPort: 5432
        env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: pw
                name: db-password
          - name: POSTGRES_USER
            value: "postgres"
          - name: PGDATA
            value: "/var/lib/postgresql/data/mydata"
          - name: DD_ENV
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/env']
          - name: DD_SERVICE
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/service']
          - name: DD_VERSION
            value: "1.0"
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgresdb 
      serviceAccountName: postgres
      volumes:
      - name: postgresdb
        persistentVolumeClaim:
            claimName: task-pvc-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ecommerce
    tags.datadoghq.com/service: db
    tags.datadoghq.com/env: "development"
  name: db
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: ecommerce
    tags.datadoghq.com/service: db
    tags.datadoghq.com/env: "development"
